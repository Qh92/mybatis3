<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qinh.dao.DepartmentMapper">
    <!-- 引用缓存：namespace,指定和哪个名称命名空间下的缓存一样 -->
    <cache-ref namespace="com.qinh.dao.EmployeeMapper"/>
    <!--<cache/>-->

    <select id="getDeptById" resultType="com.qinh.entity.Department">
        select id,dept_name departmentName from dept where id = #{id}
    </select>


    <!--collection嵌套结果集的方式，定义关联的集合类型元素的封装规则 -->
    <resultMap id="myDept" type="com.qinh.entity.Department">
        <id column="dept_id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <!--
            collection定义关联集合类型的属性的封装规则
            ofType:指定集合里面元素的类型
         -->
        <collection property="emps" ofType="com.qinh.entity.Employee">
            <!-- 定义集合中元素的封装规则 -->
            <id column="emp_id" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>

    <select id="getDeptByIdPlus" resultMap="myDept">
        select d.id dept_id,d.dept_name dept_name,e.id emp_id ,e.last_name last_name, e.email email ,e.gender gender
        from dept d left join employee e on d.id = e.dept_id  where d.id = #{id}
    </select>

    <resultMap id="myDeptStep" type="com.qinh.entity.Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <collection property="emps" select="com.qinh.dao.EmployeeMapperPlus.getEmpsByDeptId" column="{deptId=id}" fetchType="lazy">
        </collection>
    </resultMap>

    <select id="getDeptByIdStep" resultMap="myDeptStep">
        select id,dept_name from dept where id = #{id}
    </select>
    <!--
        扩展：多列的值传递过去
            将多列的值封装map传递
            column="{key1=column1,key2=column2}"
            fetchType="lazy":表示使用延迟加载
                - lazy:延迟
                - eager:立即
    -->

</mapper>