<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">


    <!-- 引入数据库的配置文件 -->
    <context:property-placeholder location="classpath:conf/dbconfig.properties"/>
    <!-- Spring希望管理所有的业务逻辑组件等 -->
    <context:component-scan base-package="com.qinh">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- Spring用来控制业务逻辑，数据源，事务控制，aop等 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 数据库基本信息配置 -->
        <property name = "url" value = "${jdbc.url}" />
        <property name = "username" value = "${jdbc.username}" />
        <property name = "password" value = "${jdbc.password}" />
        <property name = "driverClassName" value = "${jdbc.driver}" />
    </bean>
    <!-- Spring事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 开启基于注解的事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--
        整合mybatis
        目的：1.spring管理所有的组件，mapper的实现类
                service ==> dao @Autowired:自动注入mapper
              2.spring用来管理事务，spring声明式事务
    -->
    <!-- 创建出SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- configLocation指定全局配置文件的位置 -->
        <property name="configLocation" value="classpath:conf/mybatis-config.xml"/>
        <!--<property name="typeAliasesPackage" value="com.qinh.entity"/>-->
        <!--mapperLocations: 指定mapper文件的位置-->
        <property name="mapperLocations" value="classpath:conf/mapper/*.xml"/>
    </bean>

    <!-- 配置一个可以进行批量执行的sqlSession -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>

    <!--
        扫描所有的mapper接口的实现，让这些mapper能够自动注入
        base-package；指定mapper接口的包名
    -->
    <mybatis-spring:scan base-package="com.qinh.dao"/>
<!--    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
<!--        <property name="basePackage" value="com.qinh.dao"/>-->
<!--    </bean>-->

</beans>